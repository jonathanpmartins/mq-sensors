#include "../lib/ADS.cpp"
#include <Arduino.h>
#include <Wire.h>
#include <esp_task_wdt.h>
#include <iostream>

TaskHandle_t CPU0;
TaskHandle_t CPU1;

ADS ads(0x48, 4);

void loop0() { ads.loop(); }

void loop1() {
  Serial.println("delay");
  delay(100);
}

void runTask(int cpu) {
  Serial.println(cpu);
  while (true) {
    if (cpu == 0) {
      loop0();
    }
    if (cpu == 1) {
      loop1();
    }

    esp_task_wdt_reset();

    // Serial.println(uxTaskGetStackHighWaterMark(NULL)); delay(500);
  }
}

void taskCPU0(void *parameters) { runTask(0); }
void taskCPU1(void *parameters) { runTask(1); }

void setup() {
  Serial.begin(115200);
  while (!Serial)
    ;

  ads.setup();

  const int stackSize = 32768;

  xTaskCreatePinnedToCore(taskCPU0, "CPU0", stackSize, NULL, 0, &CPU0, 0);
  xTaskCreatePinnedToCore(taskCPU1, "CPU1", stackSize, NULL, 1, &CPU1, 1);
}

void loop() { vTaskDelete(NULL); }